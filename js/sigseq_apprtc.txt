NOTE: This script gets everything ready before attempting signalling
~~~~	
- open a channel
- sort out the first few ice candidates.
- get the localStream going

NOTE: This script seems to pass in the stun servers to the RTCPeerConnection
	constructor, and define onicecandidate, so my guess is that in creating
	this object, the ice candidates are tested in the background until 
	one is found... this would seem to only be guaranteed to work if there
	is a turn server to fall back on, but here a turn server is not supported
	for 'unauthorized domains' so I guess that turn servers are not free!

0. It seems that initiator (bool) is set by the server when it sends the 
	first HTTP reply (sends the web page).

1. openChannel() --> channelReady = true
	The channel seems like a socket with goog.appengine as the server
	onChannelMessage handles receiving communication through socket
	
2. maybeRequestTurn() --> turnDone = true; maybeStart()
	possibly send an xmlhttp request to the turn url, I think to get stun
		servers
	note: pcConfig (defined in html reply) already has a stun server, and
		this is used if not send xmlhttp

	2.5 maybeStart() 
		should do nothing at this point

3. doGetUserMedia() --> sets localStream; onUserMediaSuccess
	using mediaConstraints, getUserMedia

	onUserMediaSuccess(stream);     maybeStart() [should do nothing]
		attatchMediaStream(localVideo, stream)

4. Recieve an offer through the channel from the initiator
	--> signallingReady = true
	maybeStart() 





5. maybeStart() --> started = true
	createPeerConnection(pcConfig, pcConstraints);
	then adds localStream
	initiator: doCall()
	else: calleeStart()

6. 


	
